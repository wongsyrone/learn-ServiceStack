--- ServiceStack.Text.orig.il	2022-10-14 23:51:53.960650600 +0800
+++ ServiceStack.Text.il	2022-10-14 23:08:36.707408200 +0800
@@ -2,7 +2,7 @@
 //  Microsoft (R) .NET Framework IL Disassembler.  Version 4.8.4084.0
 //  Copyright (c) Microsoft Corporation.  All rights reserved.
 
-// servicestack.text.5.14.0\lib\net45
+
 
 // Metadata version: v4.0.30319
 .assembly extern mscorlib
@@ -10,7 +10,12 @@
   .publickeytoken = (B7 7A 5C 56 19 34 E0 89 )                         // .z\V.4..
   .ver 4:0:0:0
 }
-.assembly extern System.Runtime.Serialization
+.assembly extern System
+{
+  .publickeytoken = (B7 7A 5C 56 19 34 E0 89 )                         // .z\V.4..
+  .ver 4:0:0:0
+}
+.assembly extern System.Core
 {
   .publickeytoken = (B7 7A 5C 56 19 34 E0 89 )                         // .z\V.4..
   .ver 4:0:0:0
@@ -20,12 +25,7 @@
   .publickeytoken = (CC 7B 13 FF CD 2D DD 51 )                         // .{...-.Q
   .ver 4:0:1:1
 }
-.assembly extern System
-{
-  .publickeytoken = (B7 7A 5C 56 19 34 E0 89 )                         // .z\V.4..
-  .ver 4:0:0:0
-}
-.assembly extern System.Core
+.assembly extern System.Runtime.Serialization
 {
   .publickeytoken = (B7 7A 5C 56 19 34 E0 89 )                         // .z\V.4..
   .ver 4:0:0:0
@@ -40,12 +40,7 @@
   .publickeytoken = (B0 3F 5F 7F 11 D5 0A 3A )                         // .?_....:
   .ver 4:0:0:0
 }
-.assembly extern System.Configuration
-{
-  .publickeytoken = (B0 3F 5F 7F 11 D5 0A 3A )                         // .?_....:
-  .ver 4:0:0:0
-}
-.assembly ServiceStack.Text
+.assembly cil ServiceStack.Text
 {
   .custom instance void [mscorlib]System.Runtime.CompilerServices.ExtensionAttribute::.ctor() = ( 01 00 00 00 ) 
   .custom instance void [mscorlib]System.Runtime.CompilerServices.CompilationRelaxationsAttribute::.ctor(int32) = ( 01 00 08 00 00 00 00 00 ) 
@@ -105,7 +100,7 @@
 .stackreserve 0x00100000
 .subsystem 0x0003       // WINDOWS_CUI
 .corflags 0x00000009    //  ILONLY
-// Image base: 0x07070000
+// Image base: 0x06940000
 
 
 // =============== CLASS MEMBERS DECLARATION ===================
@@ -24420,16 +24415,15 @@
 
   .method public hidebysig static void  RegisterLicense(string licenseKeyText) cil managed
   {
-    // Code size       358 (0x166)
+    // Code size       289 (0x121)
     .maxstack  4
     .locals init (string V_0,
              class [mscorlib]System.Globalization.CultureInfo V_1,
-             int32 V_2,
-             class [mscorlib]System.Exception V_3,
-             string V_4,
-             class [mscorlib]System.Type V_5,
-             bool V_6,
-             class [mscorlib]System.Exception V_7)
+             class [mscorlib]System.Exception V_2,
+             string V_3,
+             class [mscorlib]System.Type V_4,
+             bool V_5,
+             class [mscorlib]System.Exception V_6)
     IL_0000:  call       void ServiceStack.Text.JsConfig::InitStatics()
     IL_0005:  ldsfld     class ServiceStack.LicenseUtils/__ActivatedLicense ServiceStack.LicenseUtils::__activatedLicense
     IL_000a:  brfalse.s  IL_000d
@@ -24449,234 +24443,154 @@
       .try
       {
         IL_0029:  ldarg.0
-        IL_002a:  call       bool ServiceStack.LicenseUtils::IsFreeLicenseKey(string)
-        IL_002f:  brfalse.s  IL_003c
-
-        IL_0031:  ldarg.0
-        IL_0032:  call       void ServiceStack.LicenseUtils::ValidateFreeLicenseKey(string)
-        IL_0037:  leave      IL_0165
-
-        IL_003c:  ldarg.0
-        IL_003d:  ldc.i4.s   45
-        IL_003f:  call       string[] ServiceStack.StringExtensions::SplitOnFirst(string,
-                                                                                  char)
-        IL_0044:  ldc.i4.0
-        IL_0045:  ldelem.ref
-        IL_0046:  stloc.0
-        IL_0047:  ldloc.0
-        IL_0048:  ldloca.s   V_2
-        IL_004a:  call       bool [mscorlib]System.Int32::TryParse(string,
-                                                                   int32&)
-        IL_004f:  brfalse.s  IL_0069
-
-        IL_0051:  ldsfld     int32[] ServiceStack.LicenseUtils::revokedSubs
-        IL_0056:  ldloc.2
-        IL_0057:  call       bool [System.Core]System.Linq.Enumerable::Contains<int32>(class [mscorlib]System.Collections.Generic.IEnumerable`1<!!0>,
-                                                                                       !!0)
-        IL_005c:  brfalse.s  IL_0069
-
-        IL_005e:  ldstr      "This subscription has been revoked.  Please see se"
-        + "rvicestack.net or contact team@servicestack.net for more details."
-        IL_0063:  newobj     instance void ServiceStack.LicenseException::.ctor(string)
-        IL_0068:  throw
-
-        IL_0069:  ldarg.0
-        IL_006a:  call       class ServiceStack.LicenseKey ServiceStack.LicenseUtils::VerifyLicenseKeyText(string)
-        IL_006f:  call       void ServiceStack.LicenseUtils::ValidateLicenseKey(class ServiceStack.LicenseKey)
-        IL_0074:  leave      IL_0165
+        IL_002a:  call       class ServiceStack.LicenseKey ServiceStack.LicenseUtils::VerifyLicenseKeyText(string)
+        IL_002f:  call       void ServiceStack.LicenseUtils::ValidateLicenseKey(class ServiceStack.LicenseKey)
+        IL_0034:  leave      IL_0120
 
       }  // end .try
       catch [mscorlib]System.PlatformNotSupportedException 
       {
-        IL_0079:  pop
-        IL_007a:  newobj     instance void ServiceStack.LicenseKey::.ctor()
-        IL_007f:  dup
-        IL_0080:  ldc.i4.3
-        IL_0081:  callvirt   instance void ServiceStack.LicenseKey::set_Type(valuetype ServiceStack.LicenseType)
-        IL_0086:  newobj     instance void ServiceStack.LicenseUtils/__ActivatedLicense::.ctor(class ServiceStack.LicenseKey)
-        IL_008b:  stsfld     class ServiceStack.LicenseUtils/__ActivatedLicense ServiceStack.LicenseUtils::__activatedLicense
-        IL_0090:  leave      IL_0165
+        IL_0039:  pop
+        IL_003a:  newobj     instance void ServiceStack.LicenseKey::.ctor()
+        IL_003f:  dup
+        IL_0040:  ldc.i4.3
+        IL_0041:  callvirt   instance void ServiceStack.LicenseKey::set_Type(valuetype ServiceStack.LicenseType)
+        IL_0046:  newobj     instance void ServiceStack.LicenseUtils/__ActivatedLicense::.ctor(class ServiceStack.LicenseKey)
+        IL_004b:  stsfld     class ServiceStack.LicenseUtils/__ActivatedLicense ServiceStack.LicenseUtils::__activatedLicense
+        IL_0050:  leave      IL_0120
 
       }  // end handler
       catch [mscorlib]System.Exception 
       {
-        IL_0095:  stloc.3
-        IL_0096:  ldloc.3
-        IL_0097:  isinst     [mscorlib]System.IO.FileNotFoundException
-        IL_009c:  brtrue.s   IL_00b6
-
-        IL_009e:  ldloc.3
-        IL_009f:  isinst     [mscorlib]System.IO.FileLoadException
-        IL_00a4:  brtrue.s   IL_00b6
-
-        IL_00a6:  ldloc.3
-        IL_00a7:  isinst     [mscorlib]System.BadImageFormatException
-        IL_00ac:  brtrue.s   IL_00b6
-
-        IL_00ae:  ldloc.3
-        IL_00af:  isinst     [mscorlib]System.NotSupportedException
-        IL_00b4:  brfalse.s  IL_00b8
-
-        IL_00b6:  rethrow
-        IL_00b8:  ldloc.3
-        IL_00b9:  isinst     ServiceStack.LicenseException
-        IL_00be:  brfalse.s  IL_00c2
+        IL_0055:  stloc.2
+        IL_0056:  ldloc.2
+        IL_0057:  isinst     [mscorlib]System.IO.FileNotFoundException
+        IL_005c:  brtrue.s   IL_0076
 
-        IL_00c0:  rethrow
-        IL_00c2:  ldstr      "This license is invalid. Please see servicestack.n"
+        IL_005e:  ldloc.2
+        IL_005f:  isinst     [mscorlib]System.IO.FileLoadException
+        IL_0064:  brtrue.s   IL_0076
+
+        IL_0066:  ldloc.2
+        IL_0067:  isinst     [mscorlib]System.BadImageFormatException
+        IL_006c:  brtrue.s   IL_0076
+
+        IL_006e:  ldloc.2
+        IL_006f:  isinst     [mscorlib]System.NotSupportedException
+        IL_0074:  brfalse.s  IL_0078
+
+        IL_0076:  rethrow
+        IL_0078:  ldloc.2
+        IL_0079:  isinst     ServiceStack.LicenseException
+        IL_007e:  brfalse.s  IL_0082
+
+        IL_0080:  rethrow
+        IL_0082:  ldstr      "This license is invalid. Please see servicestack.n"
         + "et or contact team@servicestack.net for more details."
-        IL_00c7:  stloc.s    V_4
-        IL_00c9:  ldloc.0
-        IL_00ca:  call       bool [mscorlib]System.String::IsNullOrEmpty(string)
-        IL_00cf:  brtrue.s   IL_00e5
-
-        IL_00d1:  ldloc.s    V_4
-        IL_00d3:  ldstr      " The id for this license is '"
-        IL_00d8:  ldloc.0
-        IL_00d9:  ldstr      "'"
-        IL_00de:  call       string [mscorlib]System.String::Concat(string,
+        IL_0087:  stloc.3
+        IL_0088:  ldloc.0
+        IL_0089:  call       bool [mscorlib]System.String::IsNullOrEmpty(string)
+        IL_008e:  brtrue.s   IL_00a2
+
+        IL_0090:  ldloc.3
+        IL_0091:  ldstr      " The id for this license is '"
+        IL_0096:  ldloc.0
+        IL_0097:  ldstr      "'"
+        IL_009c:  call       string [mscorlib]System.String::Concat(string,
                                                                     string,
                                                                     string,
                                                                     string)
-        IL_00e3:  stloc.s    V_4
-        IL_00e5:  ldtoken    ServiceStack.LicenseUtils
-        IL_00ea:  call       class [mscorlib]System.Type [mscorlib]System.Type::GetTypeFromHandle(valuetype [mscorlib]System.RuntimeTypeHandle)
-        IL_00ef:  stloc.s    V_5
-        IL_00f1:  ldc.i4.0
-        IL_00f2:  stloc.s    V_6
+        IL_00a1:  stloc.3
+        IL_00a2:  ldtoken    ServiceStack.LicenseUtils
+        IL_00a7:  call       class [mscorlib]System.Type [mscorlib]System.Type::GetTypeFromHandle(valuetype [mscorlib]System.RuntimeTypeHandle)
+        IL_00ac:  stloc.s    V_4
+        IL_00ae:  ldc.i4.0
+        IL_00af:  stloc.s    V_5
         .try
         {
-          IL_00f4:  ldloc.s    V_5
-          IL_00f6:  ldloca.s   V_6
-          IL_00f8:  call       void [mscorlib]System.Threading.Monitor::Enter(object,
+          IL_00b1:  ldloc.s    V_4
+          IL_00b3:  ldloca.s   V_5
+          IL_00b5:  call       void [mscorlib]System.Threading.Monitor::Enter(object,
                                                                               bool&)
           .try
           {
-            IL_00fd:  ldsfld     class ServiceStack.PclExport ServiceStack.PclExport::Instance
-            IL_0102:  ldarg.0
-            IL_0103:  callvirt   instance class ServiceStack.LicenseKey ServiceStack.PclExport::VerifyLicenseKeyTextFallback(string)
-            IL_0108:  call       void ServiceStack.LicenseUtils::ValidateLicenseKey(class ServiceStack.LicenseKey)
-            IL_010d:  leave.s    IL_013d
+            IL_00ba:  ldsfld     class ServiceStack.PclExport ServiceStack.PclExport::Instance
+            IL_00bf:  ldarg.0
+            IL_00c0:  callvirt   instance class ServiceStack.LicenseKey ServiceStack.PclExport::VerifyLicenseKeyTextFallback(string)
+            IL_00c5:  call       void ServiceStack.LicenseUtils::ValidateLicenseKey(class ServiceStack.LicenseKey)
+            IL_00ca:  leave.s    IL_00f9
 
           }  // end .try
           catch [mscorlib]System.Exception 
           {
-            IL_010f:  stloc.s    V_7
-            IL_0111:  ldloc.s    V_7
-            IL_0113:  isinst     [mscorlib]System.IO.FileNotFoundException
-            IL_0118:  brtrue.s   IL_012c
-
-            IL_011a:  ldloc.s    V_7
-            IL_011c:  isinst     [mscorlib]System.IO.FileLoadException
-            IL_0121:  brtrue.s   IL_012c
-
-            IL_0123:  ldloc.s    V_7
-            IL_0125:  isinst     [mscorlib]System.BadImageFormatException
-            IL_012a:  brfalse.s  IL_012e
-
-            IL_012c:  rethrow
-            IL_012e:  ldloc.s    V_4
-            IL_0130:  ldloc.s    V_7
-            IL_0132:  newobj     instance void ServiceStack.LicenseException::.ctor(string,
+            IL_00cc:  stloc.s    V_6
+            IL_00ce:  ldloc.s    V_6
+            IL_00d0:  isinst     [mscorlib]System.IO.FileNotFoundException
+            IL_00d5:  brtrue.s   IL_00e9
+
+            IL_00d7:  ldloc.s    V_6
+            IL_00d9:  isinst     [mscorlib]System.IO.FileLoadException
+            IL_00de:  brtrue.s   IL_00e9
+
+            IL_00e0:  ldloc.s    V_6
+            IL_00e2:  isinst     [mscorlib]System.BadImageFormatException
+            IL_00e7:  brfalse.s  IL_00eb
+
+            IL_00e9:  rethrow
+            IL_00eb:  ldloc.3
+            IL_00ec:  ldloc.s    V_6
+            IL_00ee:  newobj     instance void ServiceStack.LicenseException::.ctor(string,
                                                                                     class [mscorlib]System.Exception)
-            IL_0137:  call       !!0 ServiceStack.Text.TracerExceptions::Trace<class ServiceStack.LicenseException>(!!0)
-            IL_013c:  throw
+            IL_00f3:  call       !!0 ServiceStack.Text.TracerExceptions::Trace<class ServiceStack.LicenseException>(!!0)
+            IL_00f8:  throw
 
           }  // end handler
-          IL_013d:  leave.s    IL_014b
+          IL_00f9:  leave.s    IL_0107
 
         }  // end .try
         finally
         {
-          IL_013f:  ldloc.s    V_6
-          IL_0141:  brfalse.s  IL_014a
+          IL_00fb:  ldloc.s    V_5
+          IL_00fd:  brfalse.s  IL_0106
 
-          IL_0143:  ldloc.s    V_5
-          IL_0145:  call       void [mscorlib]System.Threading.Monitor::Exit(object)
-          IL_014a:  endfinally
+          IL_00ff:  ldloc.s    V_4
+          IL_0101:  call       void [mscorlib]System.Threading.Monitor::Exit(object)
+          IL_0106:  endfinally
         }  // end handler
-        IL_014b:  ldloc.s    V_4
-        IL_014d:  ldloc.3
-        IL_014e:  newobj     instance void ServiceStack.LicenseException::.ctor(string,
+        IL_0107:  ldloc.3
+        IL_0108:  ldloc.2
+        IL_0109:  newobj     instance void ServiceStack.LicenseException::.ctor(string,
                                                                                 class [mscorlib]System.Exception)
-        IL_0153:  call       !!0 ServiceStack.Text.TracerExceptions::Trace<class ServiceStack.LicenseException>(!!0)
-        IL_0158:  throw
+        IL_010e:  call       !!0 ServiceStack.Text.TracerExceptions::Trace<class ServiceStack.LicenseException>(!!0)
+        IL_0113:  throw
 
       }  // end handler
     }  // end .try
     finally
     {
-      IL_0159:  call       class [mscorlib]System.Threading.Thread [mscorlib]System.Threading.Thread::get_CurrentThread()
-      IL_015e:  ldloc.1
-      IL_015f:  callvirt   instance void [mscorlib]System.Threading.Thread::set_CurrentCulture(class [mscorlib]System.Globalization.CultureInfo)
-      IL_0164:  endfinally
+      IL_0114:  call       class [mscorlib]System.Threading.Thread [mscorlib]System.Threading.Thread::get_CurrentThread()
+      IL_0119:  ldloc.1
+      IL_011a:  callvirt   instance void [mscorlib]System.Threading.Thread::set_CurrentCulture(class [mscorlib]System.Globalization.CultureInfo)
+      IL_011f:  endfinally
     }  // end handler
-    IL_0165:  ret
+    IL_0120:  ret
   } // end of method LicenseUtils::RegisterLicense
 
   .method private hidebysig static void  ValidateLicenseKey(class ServiceStack.LicenseKey key) cil managed
   {
-    // Code size       169 (0xa9)
-    .maxstack  2
-    IL_0000:  call       valuetype [mscorlib]System.DateTime ServiceStack.Text.Env::GetReleaseDate()
-    IL_0005:  ldarg.0
-    IL_0006:  callvirt   instance valuetype [mscorlib]System.DateTime ServiceStack.LicenseKey::get_Expiry()
-    IL_000b:  call       bool [mscorlib]System.DateTime::op_GreaterThan(valuetype [mscorlib]System.DateTime,
-                                                                        valuetype [mscorlib]System.DateTime)
-    IL_0010:  brfalse.s  IL_003c
-
-    IL_0012:  ldstr      "This license has expired on {0:d} and is not valid"
-    + " for use with this release."
-    IL_0017:  ldarg.0
-    IL_0018:  callvirt   instance valuetype [mscorlib]System.DateTime ServiceStack.LicenseKey::get_Expiry()
-    IL_001d:  box        [mscorlib]System.DateTime
-    IL_0022:  call       string [mscorlib]System.String::Format(string,
-                                                                object)
-    IL_0027:  ldstr      " Please see servicestack.net or contact team@servi"
-    + "cestack.net for more details."
-    IL_002c:  call       string [mscorlib]System.String::Concat(string,
-                                                                string)
-    IL_0031:  newobj     instance void ServiceStack.LicenseException::.ctor(string)
-    IL_0036:  call       !!0 ServiceStack.Text.TracerExceptions::Trace<class ServiceStack.LicenseException>(!!0)
-    IL_003b:  throw
-
-    IL_003c:  ldarg.0
-    IL_003d:  callvirt   instance valuetype ServiceStack.LicenseType ServiceStack.LicenseKey::get_Type()
-    IL_0042:  ldc.i4.s   14
-    IL_0044:  bne.un.s   IL_0082
-
-    IL_0046:  call       valuetype [mscorlib]System.DateTime [mscorlib]System.DateTime::get_UtcNow()
-    IL_004b:  ldarg.0
-    IL_004c:  callvirt   instance valuetype [mscorlib]System.DateTime ServiceStack.LicenseKey::get_Expiry()
-    IL_0051:  call       bool [mscorlib]System.DateTime::op_GreaterThan(valuetype [mscorlib]System.DateTime,
-                                                                        valuetype [mscorlib]System.DateTime)
-    IL_0056:  brfalse.s  IL_0082
-
-    IL_0058:  ldstr      "This trial license has expired on {0:d}."
-    IL_005d:  ldarg.0
-    IL_005e:  callvirt   instance valuetype [mscorlib]System.DateTime ServiceStack.LicenseKey::get_Expiry()
-    IL_0063:  box        [mscorlib]System.DateTime
-    IL_0068:  call       string [mscorlib]System.String::Format(string,
-                                                                object)
-    IL_006d:  ldstr      " Please see servicestack.net or contact team@servi"
-    + "cestack.net for more details."
-    IL_0072:  call       string [mscorlib]System.String::Concat(string,
-                                                                string)
-    IL_0077:  newobj     instance void ServiceStack.LicenseException::.ctor(string)
-    IL_007c:  call       !!0 ServiceStack.Text.TracerExceptions::Trace<class ServiceStack.LicenseException>(!!0)
-    IL_0081:  throw
-
-    IL_0082:  ldarg.0
-    IL_0083:  newobj     instance void ServiceStack.LicenseUtils/__ActivatedLicense::.ctor(class ServiceStack.LicenseKey)
-    IL_0088:  stsfld     class ServiceStack.LicenseUtils/__ActivatedLicense ServiceStack.LicenseUtils::__activatedLicense
-    IL_008d:  call       string ServiceStack.LicenseUtils::GetLicenseWarningMessage()
-    IL_0092:  call       void ServiceStack.LicenseUtils::set_LicenseWarningMessage(string)
-    IL_0097:  call       string ServiceStack.LicenseUtils::get_LicenseWarningMessage()
-    IL_009c:  brfalse.s  IL_00a8
+    // Code size       39 (0x27)
+    .maxstack  8
+    IL_0000:  ldarg.0
+    IL_0001:  newobj     instance void ServiceStack.LicenseUtils/__ActivatedLicense::.ctor(class ServiceStack.LicenseKey)
+    IL_0006:  stsfld     class ServiceStack.LicenseUtils/__ActivatedLicense ServiceStack.LicenseUtils::__activatedLicense
+    IL_000b:  call       string ServiceStack.LicenseUtils::GetLicenseWarningMessage()
+    IL_0010:  call       void ServiceStack.LicenseUtils::set_LicenseWarningMessage(string)
+    IL_0015:  call       string ServiceStack.LicenseUtils::get_LicenseWarningMessage()
+    IL_001a:  brfalse.s  IL_0026
 
-    IL_009e:  call       string ServiceStack.LicenseUtils::get_LicenseWarningMessage()
-    IL_00a3:  call       void [mscorlib]System.Console::WriteLine(string)
-    IL_00a8:  ret
+    IL_001c:  call       string ServiceStack.LicenseUtils::get_LicenseWarningMessage()
+    IL_0021:  call       void [mscorlib]System.Console::WriteLine(string)
+    IL_0026:  ret
   } // end of method LicenseUtils::ValidateLicenseKey
 
   .method private hidebysig static bool  IsFreeLicenseKey(string licenseText) cil managed
@@ -25485,151 +25399,36 @@
           GetLicensedFeatures(class ServiceStack.LicenseKey key) cil managed
   {
     .custom instance void [mscorlib]System.Runtime.CompilerServices.ExtensionAttribute::.ctor() = ( 01 00 00 00 ) 
-    // Code size       160 (0xa0)
-    .maxstack  2
-    .locals init (valuetype ServiceStack.LicenseType V_0)
-    IL_0000:  ldarg.0
-    IL_0001:  callvirt   instance valuetype ServiceStack.LicenseType ServiceStack.LicenseKey::get_Type()
-    IL_0006:  stloc.0
-    IL_0007:  ldloc.0
-    IL_0008:  switch     ( 
-                          IL_005b,
-                          IL_005e,
-                          IL_005e,
-                          IL_005e,
-                          IL_005e,
-                          IL_005e,
-                          IL_0065,
-                          IL_0065,
-                          IL_0068,
-                          IL_0068,
-                          IL_0073,
-                          IL_0073,
-                          IL_006c,
-                          IL_006c,
-                          IL_005e,
-                          IL_005e,
-                          IL_0065,
-                          IL_0073,
-                          IL_0068)
-    IL_0059:  br.s       IL_0077
-
-    IL_005b:  ldc.i4.0
-    IL_005c:  conv.i8
-    IL_005d:  ret
-
-    IL_005e:  ldc.i4     0x7ff
-    IL_0063:  conv.i8
-    IL_0064:  ret
-
-    IL_0065:  ldc.i4.2
-    IL_0066:  conv.i8
-    IL_0067:  ret
-
-    IL_0068:  ldc.i4.s   34
-    IL_006a:  conv.i8
-    IL_006b:  ret
-
-    IL_006c:  ldc.i4     0x402
-    IL_0071:  conv.i8
-    IL_0072:  ret
-
-    IL_0073:  ldc.i4.s   18
-    IL_0075:  conv.i8
-    IL_0076:  ret
-
-    IL_0077:  ldstr      "Unknown License Type: "
-    IL_007c:  ldarg.0
-    IL_007d:  callvirt   instance valuetype ServiceStack.LicenseType ServiceStack.LicenseKey::get_Type()
-    IL_0082:  stloc.0
-    IL_0083:  ldloca.s   V_0
-    IL_0085:  constrained. ServiceStack.LicenseType
-    IL_008b:  callvirt   instance string [mscorlib]System.Object::ToString()
-    IL_0090:  call       string [mscorlib]System.String::Concat(string,
-                                                                string)
-    IL_0095:  newobj     instance void [mscorlib]System.ArgumentException::.ctor(string)
-    IL_009a:  call       !!0 ServiceStack.Text.TracerExceptions::Trace<class [mscorlib]System.ArgumentException>(!!0)
-    IL_009f:  throw
+    // Code size       7 (0x7)
+    .maxstack  8
+    IL_0000:  ldc.i4     0x7ff
+    IL_0005:  conv.i8
+    IL_0006:  ret
   } // end of method LicenseUtils::GetLicensedFeatures
 
   .method public hidebysig static class ServiceStack.LicenseKey 
           ToLicenseKey(string licenseKeyText) cil managed
   {
     .custom instance void [mscorlib]System.Runtime.CompilerServices.ExtensionAttribute::.ctor() = ( 01 00 00 00 ) 
-    // Code size       134 (0x86)
-    .maxstack  4
-    .locals init (string V_0,
-             string V_1,
-             string V_2,
-             class [mscorlib]System.Func`2<string,valuetype [mscorlib]System.DateTime> V_3,
-             class [mscorlib]System.Func`2<string,valuetype [mscorlib]System.DateTime> V_4,
-             class ServiceStack.LicenseKey V_5)
-    IL_0000:  ldarg.0
-    IL_0001:  ldstr      "\\s+"
-    IL_0006:  ldstr      ""
-    IL_000b:  call       string [System]System.Text.RegularExpressions.Regex::Replace(string,
-                                                                                      string,
-                                                                                      string)
-    IL_0010:  starg.s    licenseKeyText
-    IL_0012:  ldarg.0
-    IL_0013:  ldc.i4.s   45
-    IL_0015:  call       string[] ServiceStack.StringExtensions::SplitOnFirst(string,
-                                                                              char)
-    IL_001a:  dup
-    IL_001b:  ldc.i4.0
-    IL_001c:  ldelem.ref
-    IL_001d:  stloc.0
-    IL_001e:  ldc.i4.1
-    IL_001f:  ldelem.ref
-    IL_0020:  stloc.1
-    IL_0021:  ldloc.1
-    IL_0022:  call       uint8[] [mscorlib]System.Convert::FromBase64String(string)
-    IL_0027:  call       string ServiceStack.StringExtensions::FromUtf8Bytes(uint8[])
-    IL_002c:  stloc.2
-    IL_002d:  call       class [mscorlib]System.Func`2<string,!0> class ServiceStack.Text.JsConfig`1<valuetype [mscorlib]System.DateTime>::get_DeSerializeFn()
-    IL_0032:  stloc.3
-    IL_0033:  call       class [mscorlib]System.Func`2<string,!0> class ServiceStack.Text.JsConfig`1<valuetype [mscorlib]System.DateTime>::get_RawDeserializeFn()
-    IL_0038:  stloc.s    V_4
-    .try
-    {
-      IL_003a:  ldnull
-      IL_003b:  call       void class ServiceStack.Text.JsConfig`1<valuetype [mscorlib]System.DateTime>::set_DeSerializeFn(class [mscorlib]System.Func`2<string,!0>)
-      IL_0040:  ldnull
-      IL_0041:  call       void class ServiceStack.Text.JsConfig`1<valuetype [mscorlib]System.DateTime>::set_RawDeserializeFn(class [mscorlib]System.Func`2<string,!0>)
-      IL_0046:  ldloc.2
-      IL_0047:  call       !!0 ServiceStack.StringExtensions::FromJsv<class ServiceStack.LicenseKey>(string)
-      IL_004c:  dup
-      IL_004d:  callvirt   instance string ServiceStack.LicenseKey::get_Ref()
-      IL_0052:  ldloc.0
-      IL_0053:  call       bool [mscorlib]System.String::op_Inequality(string,
-                                                                       string)
-      IL_0058:  brfalse.s  IL_0071
-
-      IL_005a:  ldstr      "The license '{0}' is not assigned to CustomerId '{"
-      + "1}'."
-      IL_005f:  ldloc.1
-      IL_0060:  ldloc.0
-      IL_0061:  call       string ServiceStack.StringExtensions::Fmt(string,
-                                                                     object,
-                                                                     object)
-      IL_0066:  newobj     instance void ServiceStack.LicenseException::.ctor(string)
-      IL_006b:  call       !!0 ServiceStack.Text.TracerExceptions::Trace<class ServiceStack.LicenseException>(!!0)
-      IL_0070:  throw
-
-      IL_0071:  stloc.s    V_5
-      IL_0073:  leave.s    IL_0083
-
-    }  // end .try
-    finally
-    {
-      IL_0075:  ldloc.3
-      IL_0076:  call       void class ServiceStack.Text.JsConfig`1<valuetype [mscorlib]System.DateTime>::set_DeSerializeFn(class [mscorlib]System.Func`2<string,!0>)
-      IL_007b:  ldloc.s    V_4
-      IL_007d:  call       void class ServiceStack.Text.JsConfig`1<valuetype [mscorlib]System.DateTime>::set_RawDeserializeFn(class [mscorlib]System.Func`2<string,!0>)
-      IL_0082:  endfinally
-    }  // end handler
-    IL_0083:  ldloc.s    V_5
-    IL_0085:  ret
+    // Code size       57 (0x39)
+    .maxstack  8
+    IL_0000:  newobj     instance void ServiceStack.LicenseKey::.ctor()
+    IL_0005:  dup
+    IL_0006:  ldsfld     valuetype [mscorlib]System.DateTime [mscorlib]System.DateTime::MaxValue
+    IL_000b:  callvirt   instance void ServiceStack.LicenseKey::set_Expiry(valuetype [mscorlib]System.DateTime)
+    IL_0010:  dup
+    IL_0011:  ldstr      "cracked-hash"
+    IL_0016:  callvirt   instance void ServiceStack.LicenseKey::set_Hash(string)
+    IL_001b:  dup
+    IL_001c:  ldstr      "cracked-name"
+    IL_0021:  callvirt   instance void ServiceStack.LicenseKey::set_Name(string)
+    IL_0026:  dup
+    IL_0027:  ldstr      "cracked-ref"
+    IL_002c:  callvirt   instance void ServiceStack.LicenseKey::set_Ref(string)
+    IL_0031:  dup
+    IL_0032:  ldc.i4.5
+    IL_0033:  callvirt   instance void ServiceStack.LicenseKey::set_Type(valuetype ServiceStack.LicenseType)
+    IL_0038:  ret
   } // end of method LicenseUtils::ToLicenseKey
 
   .method public hidebysig static class ServiceStack.LicenseKey 
@@ -25896,40 +25695,14 @@
                                                              [out] class ServiceStack.LicenseKey& key) cil managed
   {
     .custom instance void [mscorlib]System.Runtime.CompilerServices.ExtensionAttribute::.ctor() = ( 01 00 00 00 ) 
-    // Code size       64 (0x40)
-    .maxstack  3
-    .locals init (valuetype [mscorlib]System.Security.Cryptography.RSAParameters V_0,
-             uint8[] V_1)
-    IL_0000:  newobj     instance void [mscorlib]System.Security.Cryptography.RSACryptoServiceProvider::.ctor()
-    IL_0005:  dup
-    IL_0006:  ldstr      "<RSAKeyValue><Modulus>w2fTTfr2SrGCclwLUkrbH0XsIUpZ"
-    + "DJ1Kei2YUwYGmIn5AUyCPLTUv3obDBUBFJKLQ61Khs7dDkXlzuJr5tkGQ0zS0PYsmBPAtsz"
-    + "uTum+FAYRH4Wdhmlfqu1Z03gkCIo1i11TmamN5432uswwFCVH60JU3CpaN97Ehru39LA1X9"
-    + "E=</Modulus><Exponent>AQAB</Exponent></RSAKeyValue>"
-    IL_000b:  call       void ServiceStack.LicenseUtils::FromXml(class [mscorlib]System.Security.Cryptography.RSA,
-                                                                 string)
-    IL_0010:  ldc.i4.0
-    IL_0011:  callvirt   instance valuetype [mscorlib]System.Security.Cryptography.RSAParameters [mscorlib]System.Security.Cryptography.RSA::ExportParameters(bool)
-    IL_0016:  stloc.0
-    IL_0017:  ldarg.1
-    IL_0018:  ldarg.0
-    IL_0019:  call       class ServiceStack.LicenseKey ServiceStack.LicenseUtils::ToLicenseKey(string)
-    IL_001e:  stind.ref
-    IL_001f:  ldarg.1
-    IL_0020:  ldind.ref
-    IL_0021:  call       string ServiceStack.LicenseUtils::GetHashKeyToSign(class ServiceStack.LicenseKey)
-    IL_0026:  call       uint8[] ServiceStack.StringExtensions::ToUtf8Bytes(string)
-    IL_002b:  ldarg.1
-    IL_002c:  ldind.ref
-    IL_002d:  callvirt   instance string ServiceStack.LicenseKey::get_Hash()
-    IL_0032:  call       uint8[] [mscorlib]System.Convert::FromBase64String(string)
-    IL_0037:  stloc.1
-    IL_0038:  ldloc.1
-    IL_0039:  ldloc.0
-    IL_003a:  call       bool ServiceStack.LicenseUtils::VerifySignedHash(uint8[],
-                                                                          uint8[],
-                                                                          valuetype [mscorlib]System.Security.Cryptography.RSAParameters)
-    IL_003f:  ret
+    // Code size       10 (0xa)
+    .maxstack  8
+    IL_0000:  ldarg.1
+    IL_0001:  ldarg.0
+    IL_0002:  call       class ServiceStack.LicenseKey ServiceStack.LicenseUtils::ToLicenseKey(string)
+    IL_0007:  stind.ref
+    IL_0008:  ldc.i4.1
+    IL_0009:  ret
   } // end of method LicenseUtils::VerifyLicenseKeyText
 
   .method public hidebysig static bool  VerifyLicenseKeyTextFallback(string licenseKeyText,
@@ -29308,7 +29081,7 @@
   } // end of property PclExport::Reflection
 } // end of class ServiceStack.PclExport
 
-.class public auto ansi beforefieldinit ServiceStack.Net45PclExport
+.class public auto ansi ServiceStack.Net45PclExport
        extends ServiceStack.PclExport
 {
   .class auto ansi serializable sealed nested private beforefieldinit '<>c'
@@ -29752,88 +29525,25 @@
   .method public hidebysig virtual instance void 
           RegisterLicenseFromConfig() cil managed
   {
-    // Code size       123 (0x7b)
-    .maxstack  2
-    .locals init (string V_0,
-             class [mscorlib]System.Exception V_1)
+    // Code size       18 (0x12)
+    .maxstack  1
+    .locals init (string V_0)
+    IL_0000:  ldstr      "crack"
+    IL_0005:  stloc.0
     .try
     {
-      IL_0000:  call       class [System]System.Collections.Specialized.NameValueCollection [System.Configuration]System.Configuration.ConfigurationManager::get_AppSettings()
-      IL_0005:  ldstr      "servicestack:license"
-      IL_000a:  callvirt   instance string [System]System.Collections.Specialized.NameValueCollection::get_Item(string)
-      IL_000f:  stloc.0
-      IL_0010:  ldloc.0
-      IL_0011:  call       bool [mscorlib]System.String::IsNullOrEmpty(string)
-      IL_0016:  brtrue.s   IL_0020
-
-      IL_0018:  ldloc.0
-      IL_0019:  call       void ServiceStack.LicenseUtils::RegisterLicense(string)
-      IL_001e:  leave.s    IL_007a
-
-      IL_0020:  leave.s    IL_0055
+      IL_0006:  ldloc.0
+      IL_0007:  call       void ServiceStack.LicenseUtils::RegisterLicense(string)
+      IL_000c:  leave.s    IL_0011
 
     }  // end .try
     catch [mscorlib]System.NotSupportedException 
     {
-      IL_0022:  pop
-      IL_0023:  leave.s    IL_007a
-
-    }  // end handler
-    catch [mscorlib]System.Exception 
-    {
-      IL_0025:  stloc.1
-      IL_0026:  ldstr      "SERVICESTACK_LICENSE"
-      IL_002b:  call       string [mscorlib]System.Environment::GetEnvironmentVariable(string)
-      IL_0030:  dup
-      IL_0031:  brtrue.s   IL_0037
-
-      IL_0033:  pop
-      IL_0034:  ldnull
-      IL_0035:  br.s       IL_003c
-
-      IL_0037:  call       instance string [mscorlib]System.String::Trim()
-      IL_003c:  stloc.0
-      IL_003d:  ldloc.0
-      IL_003e:  call       bool [mscorlib]System.String::IsNullOrEmpty(string)
-      IL_0043:  brfalse.s  IL_0047
-
-      IL_0045:  rethrow
-      IL_0047:  nop
-      .try
-      {
-        IL_0048:  ldloc.0
-        IL_0049:  call       void ServiceStack.LicenseUtils::RegisterLicense(string)
-        IL_004e:  leave.s    IL_0053
-
-      }  // end .try
-      catch [mscorlib]System.Object 
-      {
-        IL_0050:  pop
-        IL_0051:  ldloc.1
-        IL_0052:  throw
-
-      }  // end handler
-      IL_0053:  leave.s    IL_0055
+      IL_000e:  pop
+      IL_000f:  leave.s    IL_0011
 
     }  // end handler
-    IL_0055:  ldstr      "SERVICESTACK_LICENSE"
-    IL_005a:  call       string [mscorlib]System.Environment::GetEnvironmentVariable(string)
-    IL_005f:  dup
-    IL_0060:  brtrue.s   IL_0066
-
-    IL_0062:  pop
-    IL_0063:  ldnull
-    IL_0064:  br.s       IL_006b
-
-    IL_0066:  call       instance string [mscorlib]System.String::Trim()
-    IL_006b:  stloc.0
-    IL_006c:  ldloc.0
-    IL_006d:  call       bool [mscorlib]System.String::IsNullOrEmpty(string)
-    IL_0072:  brtrue.s   IL_007a
-
-    IL_0074:  ldloc.0
-    IL_0075:  call       void ServiceStack.LicenseUtils::RegisterLicense(string)
-    IL_007a:  ret
+    IL_0011:  ret
   } // end of method Net45PclExport::RegisterLicenseFromConfig
 
   .method public hidebysig virtual instance string 
@@ -125767,12 +125477,12 @@
     .size 103
   } // end of class '__StaticArrayInitTypeSize=103'
 
-  .field static assembly initonly valuetype '<PrivateImplementationDetails>'/'__StaticArrayInitTypeSize=103' '1C615E5A5C3A9C6C9982063104E5752704BC275E46CC25FE959211A5B2F0BDD7' at I_000938C0
-  .field static assembly initonly valuetype '<PrivateImplementationDetails>'/'__StaticArrayInitTypeSize=103' '3119C902A2D30870A3FC3661C8D3CC542815988CC258DFA0A4B9396E04855905' at I_00093928
-  .field static assembly initonly valuetype '<PrivateImplementationDetails>'/'__StaticArrayInitTypeSize=6' '342F5E91F5FD4465C46641411187A398157989A4FDBAE446043978B129AFC5B6' at I_00093990
-  .field static assembly initonly valuetype '<PrivateImplementationDetails>'/'__StaticArrayInitTypeSize=20' '4BC8F132B83C4BB836CDBA34421A02A7F358907C2620E12F63FB42521B709728' at I_00093998
-  .field static assembly initonly int64 '8F1A52EA427069AA8B6FC1D0A7BC426B2160A963E2DBFA59CE3E254462981A0B' at I_000939B0
-  .field static assembly initonly valuetype '<PrivateImplementationDetails>'/'__StaticArrayInitTypeSize=18' E77D100BF4413E202FDFAE3A173FDC0CC2E425E85867053772069510FC704200 at I_000939B8
+  .field static assembly initonly valuetype '<PrivateImplementationDetails>'/'__StaticArrayInitTypeSize=103' '1C615E5A5C3A9C6C9982063104E5752704BC275E46CC25FE959211A5B2F0BDD7' at I_000020D0
+  .field static assembly initonly valuetype '<PrivateImplementationDetails>'/'__StaticArrayInitTypeSize=103' '3119C902A2D30870A3FC3661C8D3CC542815988CC258DFA0A4B9396E04855905' at I_00002138
+  .field static assembly initonly valuetype '<PrivateImplementationDetails>'/'__StaticArrayInitTypeSize=6' '342F5E91F5FD4465C46641411187A398157989A4FDBAE446043978B129AFC5B6' at I_000021A0
+  .field static assembly initonly valuetype '<PrivateImplementationDetails>'/'__StaticArrayInitTypeSize=20' '4BC8F132B83C4BB836CDBA34421A02A7F358907C2620E12F63FB42521B709728' at I_000021A8
+  .field static assembly initonly int64 '8F1A52EA427069AA8B6FC1D0A7BC426B2160A963E2DBFA59CE3E254462981A0B' at I_000021C0
+  .field static assembly initonly valuetype '<PrivateImplementationDetails>'/'__StaticArrayInitTypeSize=18' E77D100BF4413E202FDFAE3A173FDC0CC2E425E85867053772069510FC704200 at I_000021C8
   .method assembly hidebysig static uint32 
           ComputeStringHash(string s) cil managed
   {
@@ -125812,10 +125522,45 @@
 
 } // end of class '<PrivateImplementationDetails>'
 
+.class private abstract auto ansi dummy_ptr.'{7e268b32-f01a-4514-a4fd-15e10f9fd951}'
+       extends [mscorlib]System.Object
+{
+  .method public hidebysig newslot abstract virtual 
+          instance void  mp0004B6() cil managed
+  {
+  } // end of method '{7e268b32-f01a-4514-a4fd-15e10f9fd951}'::mp0004B6
+
+  .method public hidebysig newslot abstract virtual 
+          instance void  mp0004B7() cil managed
+  {
+  } // end of method '{7e268b32-f01a-4514-a4fd-15e10f9fd951}'::mp0004B7
+
+  .method public hidebysig newslot abstract virtual 
+          instance void  mp0004C5() cil managed
+  {
+  } // end of method '{7e268b32-f01a-4514-a4fd-15e10f9fd951}'::mp0004C5
+
+  .method public hidebysig newslot abstract virtual 
+          instance void  mp0004C6() cil managed
+  {
+  } // end of method '{7e268b32-f01a-4514-a4fd-15e10f9fd951}'::mp0004C6
+
+  .method public hidebysig newslot abstract virtual 
+          instance void  mp0004D0() cil managed
+  {
+  } // end of method '{7e268b32-f01a-4514-a4fd-15e10f9fd951}'::mp0004D0
+
+  .method public hidebysig newslot abstract virtual 
+          instance void  mp0004D1() cil managed
+  {
+  } // end of method '{7e268b32-f01a-4514-a4fd-15e10f9fd951}'::mp0004D1
+
+} // end of class dummy_ptr.'{7e268b32-f01a-4514-a4fd-15e10f9fd951}'
+
 
 // =============================================================
 
-.data cil I_000938C0 = bytearray (
+.data cil I_000020D0 = bytearray (
                  FF FF FF FF FF FF FF FF FF FF FF FF FF FF FF FF
                  FF FF FF FF FF FF FF FF FF FF FF FF FF FF FF FF
                  FF FF FF FF FF FF FF FF FF FF FF FF FF FF FF FF
@@ -125823,8 +125568,8 @@
                  FF A0 B0 C0 D0 E0 F0 FF FF FF FF FF FF FF FF FF
                  FF FF FF FF FF FF FF FF FF FF FF FF FF FF FF FF
                  FF A0 B0 C0 D0 E0 F0) 
-.data cil I_00093927 = int8[1]
-.data cil I_00093928 = bytearray (
+.data cil I_00002137 = int8[1]
+.data cil I_00002138 = bytearray (
                  FF FF FF FF FF FF FF FF FF FF FF FF FF FF FF FF
                  FF FF FF FF FF FF FF FF FF FF FF FF FF FF FF FF
                  FF FF FF FF FF FF FF FF FF FF FF FF FF FF FF FF
@@ -125832,18 +125577,18 @@
                  FF 0A 0B 0C 0D 0E 0F FF FF FF FF FF FF FF FF FF
                  FF FF FF FF FF FF FF FF FF FF FF FF FF FF FF FF
                  FF 0A 0B 0C 0D 0E 0F) 
-.data cil I_0009398F = int8[1]
-.data cil I_00093990 = bytearray (
+.data cil I_0000219F = int8[1]
+.data cil I_000021A0 = bytearray (
                  3C 00 3E 00 2B 00)                               // <.>.+.
-.data cil I_00093996 = int8[2]
-.data cil I_00093998 = bytearray (
+.data cil I_000021A6 = int8[2]
+.data cil I_000021A8 = bytearray (
                  B2 0F 00 00 B3 0F 00 00 C9 0F 00 00 EB 10 00 00
                  E5 11 00 00) 
-.data cil I_000939AC = int8[4]
-.data cil I_000939B0 = bytearray (
+.data cil I_000021BC = int8[4]
+.data cil I_000021C0 = bytearray (
                  20 00 09 00 0D 00 0A 00)                         //  .......
-.data cil I_000939B8 = bytearray (
+.data cil I_000021C8 = bytearray (
                  22 00 3A 00 2C 00 7B 00 7D 00 5B 00 5D 00 0D 00  // ".:.,.{.}.[.]...
                  0A 00) 
 // *********** DISASSEMBLY COMPLETE ***********************
-// WARNING: Created Win32 resource file ServiceStack.Text.orig.res
+// WARNING: Created Win32 resource file ServiceStack.Text.res
